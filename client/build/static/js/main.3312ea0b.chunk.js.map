{"version":3,"sources":["components/HelloWorld.js","components/HomePage.js","components/PartyList.js","components/AddItem.js","components/ItemDisplay.js","components/PartyBag.js","components/WealthDisplay.js","components/PlayerPage.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["HelloWorld","state","message","react_default","a","createElement","this","Component","HomePage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","parties","_this2","fetch","then","res","json","data","setState","_this3","partyList","map","picture","action","concat","_id","type","value","name","class","method","placeholder","PartyList","props","players","partyBag","match","params","partyID","playerList","src","alt","AddItem","inputHandler","evnt","updateItem","objectSpread","newItem","target","console","log","handleSubmit","preventDefault","addItem","weight","quantity","notes","bookRef","ownBagID","playerID","onSubmit","onChange","min","ItemDisplay","item","PartyBag","body","JSON","stringify","headers","Content-Type","getAll","items","wealth","plat","gold","elec","silv","copp","react_router_dom","to","ItemDisplay_ItemDisplay","AddItem_AddItem","PlayerPage","Header","Footer","App","className","Header_Header","react_router","exact","path","component","Footer_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3312ea0b.chunk.js","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class HelloWorld extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        message: 'this is new text'\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    // componentDidMount() {\n    //     fetch('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport '../App.css'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class HomePage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            message: [],\n            parties: []\n        };\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n    componentDidMount() {\n        fetch('/lootapi/helloworld')\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                this.setState({message: data})\n            })\n    }\n\n      componentWillMount() {\n        fetch('/partyapi/getallparty')\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                let partyList = data.map((data) => {\n                    return(\n                        <div>\n                            <span>Picture = {data.picture}</span>\n                            {/* <button href={\"/getallplayers/\" + data._id}>{data.name}</button> */}\n                            <form action={`/partylist/${data._id}`}>\n                                <input type=\"submit\" value={data.name} class='button'/>\n                            </form>\n                            <form method=\"POST\" action={`/partyapi/deleteparty/${data._id}?_method=DELETE`}>\n                                <input type=\"submit\" value=\"Total Party Kill\" />\n                            </form>\n                        </div>\n                        )\n                    })\n                this.setState({parties: partyList})\n            })\n    }\n\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div class='homecontainer'>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n                <h2>{this.state.parties}</h2>\n                <form method = \"POST\" action=\"/partyapi/addparty\">\n                    <label>Party Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"Murder Hobos Inc.\"/>\n                    <label>Upload Picture</label>\n                    <input type=\"text\" name=\"picture\" placeholder=\"Direct Image Path Only\" />\n                    <input type=\"submit\" value=\"Add New party\" />\n                </form>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class PartyList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Party List State Message'],\n            players: [],\n            partyBag: []\n        };\n    }\n\n    componentWillMount() {\n        fetch(`/playerapi/getallplayers/${this.props.match.params.partyID}`)\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                let playerList = data.map((data) => {\n                    return(\n                        <div>\n                            <img src= {data.picture} alt=\"Character Image\" />\n                            {/* <span>Picture = {data.picture}</span> */}\n                            {/* <button href={\"/getallplayers/\" + data._id}>{data.name}</button> */}\n                            <form action={`/playerpage/${data._id}/${this.props.match.params.partyID}`}>\n                                <input type=\"submit\" value={data.name} />\n                            </form>\n                        </div>\n                        )\n                    })\n                this.setState({players: playerList})\n            })\n        }\n\n\n    render() {\n\n        return (\n            <div>\n                {/* <div>\n                    <img src=\"./images/treasurebox.png\" alt=\"Treasure Image\" />\n                    <Link to={`/partybag/${this.props.match.params.partyID}`}>Party Loot</Link>\n                </div> */}\n                <h2>{this.state.players}</h2>\n                <form method = \"POST\" action={\"/playerapi/addplayer/\" }>\n                    <label>Player Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"Blast HardCheese\"/>\n                    <label>Upload Picture</label>\n                    <input type=\"text\" name=\"picture\" placeholder=\"Direct Image Path Only\" />\n                    <input type=\"hidden\" name=\"partyID\" value={this.props.match.params.partyID} />\n                    <input type=\"submit\" value=\"Add New Player\" />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AddItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Item Add State Message'],\n            newItem: {\n                name: \"Default Item\",\n                weight: 1,\n                quantity: 1,\n                value: 1,\n                notes: \"Notes\",\n                bookRef: \"Book\",\n                ownBagID: this.props.playerID\n            }\n        };\n    }\n\n\n\n    inputHandler = (evnt) => {\n        let updateItem = {...this.state.newItem}\n        updateItem[evnt.target.name] = evnt.target.value\n        this.setState({ newItem: updateItem })\n        console.log(updateItem[evnt.target.name])\n      }\n\n    handleSubmit = (evnt) => {\n        evnt.preventDefault();\n        console.log(this.state.newItem.name)\n        this.props.addItem(this.state.newItem)\n\n    }\n\n    render(){\n        return(\n            <div>\n                <h2>Add New Item</h2>\n                <form method = \"POST\" onSubmit={this.handleSubmit}>\n                    <label>Item Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"A Pointy Stick\" onChange={this.inputHandler}/>\n                    <label>Weight</label>\n                    <input type=\"number\" name=\"weight\" min=\"0\" onChange={this.inputHandler}/>\n                    <label>Quantity</label>\n                    <input type=\"number\" name=\"quantity\" onChange={this.inputHandler}/>\n                    <label>Value</label>\n                    <input type=\"number\" name=\"value\" onChange={this.inputHandler}/>\n                    <label>Notes</label>\n                    <input type=\"text\" name=\"notes\" onChange={this.inputHandler}/>\n                    <label>BookRef</label>\n                    <input type=\"text\" name=\"bookRef\" onChange={this.inputHandler}/>\n                    <input type=\"submit\" value=\"Add New Item\" />\n                </form>\n            </div>            \n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ItemDisplay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Item Display State Message'],\n            item: []\n        };\n    }\n\n\n    render(){\n        console.log(`${this.props.item}`)\n        return(\n            <div>\n                <span>Name = {this.props.item.name}</span>\n                <span>Weight = {this.props.item.weight}</span>\n                <span>Quantity = {this.props.item.quantity}</span>\n                <span>Value = {this.props.item.value}</span>\n                <span>BookRef = {this.props.item.bookRef}</span>\n                <span>Notes = {this.props.item.notes}</span>\n                <form method=\"POST\" action={`/lootapi/deleteitem/${this.props.item._id}/${this.props.playerID}/${this.props.partyID}?_method=DELETE`}>\n                    <input type=\"submit\" value=\"Discard Item\" />\n                </form>\n            </div>\n            )\n    }\n\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AddItem from './AddItem';\nimport ItemDisplay from './ItemDisplay';\nimport WealthDisplay from './WealthDisplay';\n\n\n\nexport default class PartyBag extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Player State Message'],\n            items: [],\n            wealth: {\n                //_id: String,\n                plat: 10,\n                gold: 9,\n                elec: 8,\n                silv: 7,\n                copp: 6\n            }\n        };\n    }\n\n   \n    componentDidMount() {\n        this.getAll()\n    }\n\nAddItem = (data) => {\n    console.log(\"AddItem DataName: \" + data.name)\n    fetch(\"/lootapi/additem\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers:{\n          'Content-Type': 'application/json'\n                }\n            }).then(() => {\n                this.getAll()\n            })\n    }\n\n    getAll = () => {\n        fetch(`/lootapi/getallitems/${this.props.match.params.playerID}`)\n            .then(res => res.json())\n            .then((res) => {\n                //console.log(\"Item Res json = \" + res)\n                this.setState( {items: res} )\n            })\n            // .then(() => {\n            //     console.log(\"Second Fetch Run\")\n            //     fetch(`/api/getwallet/${this.props.match.params.playerID}`)\n            //     .then(resW => resW.json())\n            //     .then((resW) => {\n            //         console.log(\"Resafter json = \", resW)\n            //         this.setState( {wealth: resW[0]} )\n            //     })\n            // })\n    }\n\n//     callbackFunction = (childData) => {\n//         //this.setState( {wealth: childData} )\n//         //console.log(\"walletid is: \" + this.state.wallet[0]._id)\n//         // .then((childData) => {\n//             console.log(\"Child Dataplat: \" + childData.plat)\n//         fetch(\"/api/updatewallet\", {\n//             method: 'PUT', // or 'PUT'\n//             body: JSON.stringify(childData), // data can be `string` or {object}!\n//             headers:{\n//               'Content-Type': 'application/json'\n//                     }\n//                 }).then(() => {\n//                     this.getAll()\n//                 })\n//   }\n\n\n\n    render() {\n        let walletToPass = {...this.state.wealth}\n        // console.log(`Parent Wealth Plat=`, this.state.wealth)\n        // console.log(`wallet Plat= ${walletToPass.plat}`)\n        return (\n            <div>\n                <Link to={`/homepage`}>Home</Link>\n                <Link to={`/partylist/${this.props.match.params.partyID}`}>Back to Party</Link>\n                {/* <WealthDisplay wealthSend={this.state.wealth} parentCallback = {this.callbackFunction}/> */}\n                {this.state.items.map(item => (\n                        <ItemDisplay item={item} playerID={this.props.match.params.playerID} partyID={this.props.match.params.partyID}/>\n                ))}\n                <AddItem addItem={this.AddItem} playerID={this.props.match.params.playerID}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n\n\nexport default class ItemDisplay extends Component {\n\n    // this.state = { wealth: this.props.wealth }\n    state = {\n        message: ['Wealth State Message'],\n        wealth: this.props.wealthSend\n    };\n\n    //Set componentDidMount\n    //assign props form parent to current state\n    //use this state to display wealth instead of props\n\n    componentDidMount() {\n        console.log(\"Internal Mount activated\")\n        console.log(this.props.wealthSend)\n        //this.setState( {wealth : this.props.wealthSend} )\n    }\n\n\n\n    inputHandler = (evnt) => {\n        let updateWallet = { ...this.state.wealth }\n\n        updateWallet[evnt.target.name] = evnt.target.value\n\n        this.setState({ wealth: updateWallet })\n\n        console.log(\"Plat On Input: \" + this.state.wealth.plat)\n\n    }\n\n\n    handleSubmit = (evnt) => {\n        evnt.preventDefault();\n        console.log(\"Plat on submit: \" + this.state.wealth.plat)\n        //console.log(\"id on sub: \" + this.state.wealth._id)\n        this.props.parentCallback(this.state.wealth);\n    }\n\n\n\n\n    render() {\n        console.log(`Plat on Internal Render= ${this.state.wealth.plat}`)\n        return (\n            <div>\n                <form method=\"POST\" onSubmit={this.handleSubmit}>\n                    <label>Platinum:</label>\n                    <input type=\"number\" name=\"plat\" value={this.state.wealth.plat} onChange={this.inputHandler} min=\"0\" />\n                    <label>Gold:</label>\n                    <input type=\"number\" name=\"gold\" value={this.state.wealth.gold} onChange={this.inputHandler} min=\"0\" />\n                    <label>Electrum</label>\n                    <input type=\"number\" name=\"elec\" value={this.state.wealth.elec} onChange={this.inputHandler} min=\"0\" />\n                    <label>Siver:</label>\n                    <input type=\"number\" name=\"silv\" value={this.state.wealth.silv} onChange={this.inputHandler} min=\"0\" />\n                    <label>Copper:</label>\n                    <input type=\"number\" name=\"copp\" value={this.state.wealth.copp} onChange={this.inputHandler} min=\"0\" />\n                    <input type=\"submit\" value=\"Accept Wallet Changes\" />\n                </form>\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AddItem from './AddItem';\nimport ItemDisplay from './ItemDisplay';\nimport WealthDisplay from './WealthDisplay';\n\n\n\nexport default class PlayerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Player State Message'],\n            items: [],\n            wealth: {\n                //_id: String,\n                plat: 10,\n                gold: 9,\n                elec: 8,\n                silv: 7,\n                copp: 6\n            }\n        };\n    }\n\n   \n    componentDidMount() {\n        this.getAll()\n    }\n\nAddItem = (data) => {\n    console.log(\"AddItem DataName: \" + data.name)\n    fetch(\"/lootapi/additem\", {\n        method: 'POST', // or 'PUT'\n        body: JSON.stringify(data), // data can be `string` or {object}!\n        headers:{\n          'Content-Type': 'application/json'\n                }\n            }).then(() => {\n                this.getAll()\n            })\n    }\n\n    getAll = () => {\n        fetch(`/lootapi/getallitems/${this.props.match.params.playerID}`)\n            .then(res => res.json())\n            .then((res) => {\n                //console.log(\"Item Res json = \" + res)\n                this.setState( {items: res} )\n            })\n            // .then(() => {\n            //     console.log(\"Second Fetch Run\")\n            //     fetch(`/api/getwallet/${this.props.match.params.playerID}`)\n            //     .then(resW => resW.json())\n            //     .then((resW) => {\n            //         console.log(\"Resafter json = \", resW)\n            //         this.setState( {wealth: resW[0]} )\n            //     })\n            // })\n    }\n\n//     callbackFunction = (childData) => {\n//         //this.setState( {wealth: childData} )\n//         //console.log(\"walletid is: \" + this.state.wallet[0]._id)\n//         // .then((childData) => {\n//             console.log(\"Child Dataplat: \" + childData.plat)\n//         fetch(\"/api/updatewallet\", {\n//             method: 'PUT', // or 'PUT'\n//             body: JSON.stringify(childData), // data can be `string` or {object}!\n//             headers:{\n//               'Content-Type': 'application/json'\n//                     }\n//                 }).then(() => {\n//                     this.getAll()\n//                 })\n//   }\n\n\n\n    render() {\n        let walletToPass = {...this.state.wealth}\n        // console.log(`Parent Wealth Plat=`, this.state.wealth)\n        // console.log(`wallet Plat= ${walletToPass.plat}`)\n        return (\n            <div>\n                <Link to={`/homepage`}>Home</Link>\n                <form method=\"POST\" action={`/playerapi/deleteplayer/${this.props.match.params.playerID}/${this.props.match.params.partyID}?_method=DELETE`}>\n                    <input type=\"submit\" value=\"Delete Player\" />\n                </form>\n                <Link to={`/partylist/${this.props.match.params.partyID}`}>Back to Party</Link>\n                {/* <WealthDisplay wealthSend={this.state.wealth} parentCallback = {this.callbackFunction}/> */}\n                {this.state.items.map(item => (\n                        <ItemDisplay item={item} playerID={this.props.match.params.playerID} partyID={this.props.match.params.partyID}/>\n                ))}\n                <AddItem addItem={this.AddItem} playerID={this.props.match.params.playerID}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default class Header extends Component {\n\n    render() {\n        return(\n            <div>\n                <h1>Bag Of Holding</h1>\n                <Link to={`/homepage`}>Home</Link>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'\n//import { Link } from 'react-router-dom'\n\n\nexport default class Footer extends Component {\n\n    render() {\n        return(\n            <div>\n                <h3> This is some Footer Text</h3>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HelloWorld from './components/HelloWorld.js'\nimport HomePage from './components/HomePage.js'\nimport PartyList from './components/PartyList.js'\nimport PartyBag from './components/PartyBag.js'\nimport PlayerPage from './components/PlayerPage.js'\nimport Header from './components/Header.js'\nimport Footer from './components/Footer.js'\nimport './App.css';\n\n\n\nclass App extends Component{\n  render (){\n    return (\n      <div className=\"App\">\n        <Router>\n        <Header />\n          <Switch>\n            <Route exact path =\"/\" component={HelloWorld}/>\n            <Route exact path =\"/homepage\" component={HomePage}/>\n            <Route path       =\"/partylist/:partyID\" component={PartyList}/>\n            <Route path       =\"/partybag/:/bagID/:partyID\" component={PartyBag}/>\n            <Route path       =\"/playerpage/:playerID/:partyID\" component={PlayerPage}/>\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}