{"version":3,"sources":["components/HelloWorld.js","components/HomePage.js","components/PartyList.js","components/PartyBag.js","components/PlayerPage.js","App.js","index.js"],"names":["HelloWorld","state","message","react_default","a","createElement","this","Component","HomePage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","parties","_this2","fetch","then","res","json","data","setState","_this3","partyList","map","picture","action","concat","_id","type","value","name","method","placeholder","PartyList","props","players","match","params","partyID","playerList","PartyBag","PlayerPage","items","wealth","playerID","itemList","weight","quantity","bookRef","notes","App","className","react_router_dom","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ce6cadb5.chunk.js","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class HelloWorld extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        message: 'this is new text'\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    // componentDidMount() {\n    //     fetch('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class HomePage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            message: [],\n            parties: []\n        };\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n    componentDidMount() {\n        fetch('/api/helloworld')\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                this.setState({message: data})\n            })\n    }\n\n      componentWillMount() {\n        fetch('/api/getallparty')\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                let partyList = data.map((data) => {\n                    return(\n                        <div>\n                            <span>Picture = {data.picture}</span>\n                            {/* <button href={\"/getallplayers/\" + data._id}>{data.name}</button> */}\n                            <form action={`/partylist/${data._id}`}>\n                                <input type=\"submit\" value={data.name} />\n                            </form>\n                        </div>\n                        )\n                    })\n                this.setState({parties: partyList})\n            })\n    }\n\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n                <h2>{this.state.parties}</h2>\n                <form method = \"POST\" action=\"/api/addparty\">\n                    <label>Party Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"Murder Hobos Inc.\"/>\n                    <label>Upload Picture</label>\n                    <input type=\"text\" name=\"picture\" placeholder=\"Direct Image Path Only\" />\n                    <input type=\"submit\" value=\"Add New party\" />\n                </form>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class PartyList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Party List State Message'],\n            players: []\n        };\n    }\n\n    componentWillMount() {\n        fetch(`/api/getallplayers/${this.props.match.params.partyID}`)\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                let playerList = data.map((data) => {\n                    return(\n                        <div>\n                            <span>Picture = {data.picture}</span>\n                            {/* <button href={\"/getallplayers/\" + data._id}>{data.name}</button> */}\n                            <form action={`/playerpage/${data._id}`}>\n                                <input type=\"submit\" value={data.name} />\n                            </form>\n                        </div>\n                        )\n                    })\n                this.setState({players: playerList})\n            })\n    }\n\n    \n\n\n\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <p>This Is Text</p>\n                <p>ID is {this.props.match.params.partyID}</p>\n                <h1>{this.state.message}</h1>\n                <h2>{this.state.players}</h2>\n                <form method = \"POST\" action={\"/api/addplayer/\" }>\n                    <label>Player Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"Blast HardCheese\"/>\n                    <label>Upload Picture</label>\n                    <input type=\"text\" name=\"picture\" placeholder=\"Direct Image Path Only\" />\n                    <input type=\"hidden\" name=\"partyID\" value={this.props.match.params.partyID} />\n                    <input type=\"submit\" value=\"Add New Player\" />\n                </form>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class PartyBag extends Component {\n\n    state = {\n        message: 'Party Bag'\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    // componentDidMount() {\n    //     fetch('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class PlayerPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ['Player State Message'],\n            items: [],\n            wealth: []\n        };\n    }\n\n   \n    componentWillMount() {\n        fetch(`/api/getallitems/${this.props.match.params.playerID}`)\n            .then((res) => {\n                return res.json();\n            }).then(data => {\n                let itemList = data.map((data) => {\n                    return(\n                        <div>\n                            <span>Name = {data.name}</span>\n                            <span>Weight = {data.weight}</span>\n                            <span>Quantity = {data.quantity}</span>\n                            <span>Value = {data.value}</span>\n                            <span>BookRef = {data.bookRef}</span>\n                            <span>Notes = {data.notes}</span>\n                        </div>\n                        )\n                    })\n                this.setState({items: itemList})\n            })\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.message}</h1>\n                <h1>{this.state.items}</h1>\n                <h2>Add New Item</h2>\n                <form method = \"POST\" action={\"/api/additem\" }>\n                    <label>Item Name</label>\n                    <input type=\"text\" name=\"name\" placeholder=\"A Pointy Stick\"/>\n                    <label>Weight</label>\n                    <input type=\"number\" name=\"weight\"/>\n                    <label>Quantity</label>\n                    <input type=\"number\" name=\"quantity\"/>\n                    <label>Value</label>\n                    <input type=\"text\" name=\"value\"/>\n                    <label>Notes</label>\n                    <input type=\"text\" name=\"notes\"/>\n                    <label>BookRef</label>\n                    <input type=\"text\" name=\"bookRef\"/>\n                    <input type=\"hidden\" name=\"ownBagID\" value={this.props.match.params.playerID} />\n                    <input type=\"submit\" value=\"Add New Item\" />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HelloWorld from './components/HelloWorld.js'\nimport HomePage from './components/HomePage.js'\nimport PartyList from './components/PartyList.js'\nimport PartyBag from './components/PartyBag.js'\nimport PlayerPage from './components/PlayerPage.js'\nimport './App.css';\n\nclass App extends Component{\n  render (){\n    return (\n      <div className=\"App\">\n        <h1>Here is an H1 thing in my main app page</h1>\n        <Router>\n          <Switch>\n            <Route exact path =\"/\" component={HelloWorld}/>\n            <Route exact path =\"/homepage\" component={HomePage}/>\n            <Route path       =\"/partylist/:partyID\" component={PartyList}/>\n            <Route path       =\"/partybag/:partyID\" component={PartyBag}/>\n            <Route path       =\"/playerpage/:playerID\" component={PlayerPage}/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}